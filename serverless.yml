
service: diegogutierrezserverless

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-2
  iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:DescribeTable
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: '*'

resources:
  Resources:
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: peoples
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        #BillingMode: PAY_PER_REQUEST       

functions:
  setDataDynamoApi:
    handler: setData.setDataDynamoApi
    events:
      - http:
          method: POST
          path: setDataDynamoApi/{Id}

  getStarwarsApi:
    handler: getData.getStarwarsApi
    events:
      - http:
          method: get
          path: /getStarwarsApi
          cors: true
      - http:
          method: get
          path: /getStarwarsApi/{id}
          request: 
            parameters: 
             paths: 
               id: false
          cors: true
  
  getDynamoApi:
    handler: getData.getDynamoApi
    events:
      - http:
          method: get
          path: /getDynamoApi
          cors: true
      - http:
          method: get
          path: /getDynamoApi/{Id}
          cors: true
  
  


